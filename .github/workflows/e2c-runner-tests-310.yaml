name: e2c-runner-tests-310

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]

jobs:
  start-runner:
    if: github.event.pull_request.draft == false && contains(github.event.pull_request.labels.*.name, 'to-test')
    name: start-runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
      job-ran: ${{ steps.set-ran.outputs.ran }}
    steps:
    - id: set-ran
      run: echo "::set-output name=ran::true"
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_KEY_SECRET }}
        aws-region: ${{ vars.AWS_REGION }}
    - name: Start EC2 runner
      id: start-ec2-runner
      uses: machulav/ec2-github-runner@v2
      with:
        mode: start
        github-token: ${{ secrets.GH_TOKEN }}
        ec2-image-id: ${{ vars.AWS_IMAGE_ID }}
        ec2-instance-type: ${{ vars.AWS_INSTANCE_TYPE }}
        subnet-id: ${{ vars.AWS_SUBNET }}
        security-group-id: ${{ vars.AWS_SECURITY_GROUP }}

  ubuntu-tests-310:
    name: ubuntu-tests-310
    needs: start-runner
    runs-on: ${{ needs.start-runner.outputs.label }}
    strategy:
      matrix:
        python-version: ['3.10']
    env:
      POETRY_CACHE_DIR: ${{ vars.POETRY_CACHE_DIR }}
    outputs:
      job-ran: ${{ steps.set-ran.outputs.ran }}
    steps:
    - name: Echo Poetry cache dir
      run: echo $POETRY_CACHE_DIR
      shell: bash
    - id: set-ran
      run: echo "::set-output name=ran::true"
    - name: Check available space
      run: |
        df -h
      shell: bash
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1   # no need for the history
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Echo python info
      run: |
        python --version
        which python
      shell: bash
    - name: Install ffmpeg (Ubuntu)
      if: startsWith(matrix.os, 'ubuntu')
      run: sudo apt-get update && sudo apt-get install -y ffmpeg
      shell: bash
    - name: Install ffmpeg (macOS)
      if: startsWith(matrix.os, 'macos')
      run: brew install ffmpeg
      shell: bash
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.7.1
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Install dependencies with Poetry
      run: |
        poetry env use ${{ matrix.python-version }}
        poetry run pip install iso-639
        poetry install --with dev
      shell: bash
    - name: Check poetry info
      run: |
        poetry env info
        poetry --version
      shell: bash
    - name: Check NVIDIA SMI details
      run: |
        poetry run nvidia-smi
        poetry run nvidia-smi -L
        poetry run nvidia-smi -q -d Memory
      shell: bash
    - name: Run unit tests
      id: run-tests
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: >
        poetry run pytest -n auto \
          --junitxml=pytest.xml \
          --cov-report=term-missing:skip-covered \
          --cov-report=xml:coverage.xml \
          --cov=src src/tests \
          --log-level=DEBUG \
          --verbose
      shell: bash
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
    - name: Delete poetry env with python {{ matrix.python-version }}
      run: |
        poetry env remove ${{ matrix.python-version }}
      shell: bash

  stop-runner:
    name: stop-runner
    needs:
    - start-runner   # waits for the EC2 instance to be created
    - ubuntu-tests-310   # waits for the actual job to finish
    runs-on: ubuntu-latest
    if: ${{ needs.start-runner.outputs.job-ran == 'true' && needs.ubuntu-tests-310.outputs.job-ran == 'true' || failure() }} # required to stop the runner even if an error occurred in previous jobs
    steps:
    - name: Check available space
      run: |
        df -h
      shell: bash
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_KEY_SECRET }}
        aws-region: ${{ vars.AWS_REGION }}
    - name: Stop EC2 runner
      uses: machulav/ec2-github-runner@v2
      with:
        mode: stop
        github-token: ${{ secrets.GH_TOKEN }}
        label: ${{ needs.start-runner.outputs.label }}
        ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
